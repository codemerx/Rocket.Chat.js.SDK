{"version":3,"file":"rooms.js","sourceRoot":"","sources":["../../../utils/livechat/rooms.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,sEAAwC;AACxC,6DAA8C;AAC9C,uCAAuC;AACvC,sCAAmD;AACnD,MAAM,QAAQ,GAAG,IAAI,kBAAG,CAAC,EAAE,CAAC,CAAA;AAC5B,aAAO,EAAE,CAAA;AAET,SAAe,eAAe;;QAC5B,OAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAA;QACrD,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAA;QAC1B,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,EAAE,EAAE;YAC1B,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,QAAQ,CAAC,YAAY,CAAC,oBAAW,CAAC,CAAA;YAC5D,KAAK,GAAG,OAAO,IAAI,OAAO,CAAC,KAAK,CAAA;SACjC;QACD,OAAO,KAAK,CAAA;IACd,CAAC;CAAA;AAED,SAAe,OAAO,CAAE,KAAa;;QACnC,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAA;QAC5C,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAA;QACtC,OAAO,IAAI,CAAA;IACb,CAAC;CAAA;AAED,SAAe,KAAK;;QAClB,MAAM,KAAK,GAAG,MAAM,eAAe,EAAE,CAAA;QACrC,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,KAAK,CAAC,CAAA;QACjC,MAAM,GAAG,GAAG,IAAI,IAAI,IAAI,CAAC,GAAG,CAAA;QAC5B,MAAM,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAA;QACtC,MAAM,KAAK,GAAG,oBAAoB,CAAA;QAElC,OAAO,CAAC,GAAG,CAAC;;;;;EAKZ,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;;;EAGhC,IAAI,CAAC,SAAS,CAAC,MAAM,QAAQ,CAAC,YAAY,CAAC,EAAE,GAAG,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;;;EAG5E,IAAI,CAAC,SAAS,CAAC,MAAM,QAAQ,CAAC,UAAU,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,mBAAU,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;;;EAGhF,IAAI,CAAC,SAAS,CAAC,MAAM,QAAQ,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;;;EAG7D,IAAI,CAAC,SAAS,CAAC,MAAM,QAAQ,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;;;EAG7D,IAAI,CAAC,SAAS,CAAC,MAAM,QAAQ,CAAC,iBAAiB,CAAC,KAAK,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;;GAE3E,CAAC,CAAA;IACJ,CAAC;CAAA;AAED,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA","sourcesContent":["import Api from '../../lib/api/Livechat'\nimport * as settings from '../../lib/settings'\nimport { silence } from '../../lib/log'\nimport { mockVisitor, mockSurvey } from '../config'\nconst livechat = new Api({})\nsilence()\n\nasync function getVisitorToken () {\n  console.log('\\nPreparing visitor token for tests...')\n  let token = settings.token\n  if (!token || token === '') {\n    const { visitor } = await livechat.grantVisitor(mockVisitor)\n    token = visitor && visitor.token\n  }\n  return token\n}\n\nasync function getRoom (token: string) {\n  console.log('\\nPreparing room for tests...')\n  const { room } = await livechat.room()\n  return room\n}\n\nasync function rooms () {\n  const token = await getVisitorToken()\n  const room = await getRoom(token)\n  const rid = room && room._id\n  const department = settings.department\n  const email = 'sample@rocket.chat'\n\n  console.log(`\n\nDemo of API livechat query helpers\n\n\\`livechat.room()\\`:\n${JSON.stringify(room, null, '\\t')}\n\nTransfer Livechat \\`livechat.tranferChat()\\`:\n${JSON.stringify(await livechat.transferChat({ rid, department }), null, '\\t')}\n\nLivechat Survey \\`livechat.chatSurvey()\\`:\n${JSON.stringify(await livechat.chatSurvey({ rid, data: mockSurvey }), null, '\\t')}\n\nRequest Livechat VideoCall \\`livechat.videoCall()\\`:\n${JSON.stringify(await livechat.videoCall({ rid }), null, '\\t')}\n\nClose Livechat Room \\`livechat.closeChat()\\`:\n${JSON.stringify(await livechat.closeChat({ rid }), null, '\\t')}\n\nRequest Livechat Transcript \\`livechat.requestTranscript()\\`:\n${JSON.stringify(await livechat.requestTranscript(email, { rid }), null, '\\t')}\n\n  `)\n}\n\nrooms().catch((e) => console.error(e))\n"]}